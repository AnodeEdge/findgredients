[{"/home/smcurtis/projects/findgredients/frontend/src/reportWebVitals.js":"1","/home/smcurtis/projects/findgredients/frontend/src/helpers/requestHandlers.js":"2","/home/smcurtis/projects/findgredients/frontend/src/components/ingredient-search/IngredientSearch.js":"3","/home/smcurtis/projects/findgredients/frontend/src/components/footer/Footer.js":"4","/home/smcurtis/projects/findgredients/frontend/src/index.tsx":"5","/home/smcurtis/projects/findgredients/frontend/src/App.jsx":"6","/home/smcurtis/projects/findgredients/frontend/src/components/grid/RecipeGrid.js":"7","/home/smcurtis/projects/findgredients/frontend/src/components/grid/RecipeTile.js":"8","/home/smcurtis/projects/findgredients/frontend/src/components/pages/recipe-page/Recipe.js":"9","/home/smcurtis/projects/findgredients/frontend/src/components/pages/search-page/SearchPage.js":"10","/home/smcurtis/projects/findgredients/frontend/src/components/pages/home-page/HomePage.js":"11","/home/smcurtis/projects/findgredients/frontend/src/components/dropdown/HealthLabelsDropdown.js":"12","/home/smcurtis/projects/findgredients/frontend/src/components/dropdown/DietLabelDropdown.js":"13"},{"size":362,"mtime":1627849308199,"results":"14","hashOfConfig":"15"},{"size":1461,"mtime":1630548876997,"results":"16","hashOfConfig":"15"},{"size":443,"mtime":1627856258669,"results":"17","hashOfConfig":"15"},{"size":2373,"mtime":1629252658053,"results":"18","hashOfConfig":"15"},{"size":500,"mtime":1629172144478,"results":"19","hashOfConfig":"15"},{"size":2879,"mtime":1630376936359,"results":"20","hashOfConfig":"15"},{"size":718,"mtime":1629949115553,"results":"21","hashOfConfig":"15"},{"size":867,"mtime":1629953566613,"results":"22","hashOfConfig":"15"},{"size":1937,"mtime":1629957797913,"results":"23","hashOfConfig":"15"},{"size":1952,"mtime":1630473895326,"results":"24","hashOfConfig":"15"},{"size":854,"mtime":1629949532123,"results":"25","hashOfConfig":"15"},{"size":854,"mtime":1630462837955,"results":"26","hashOfConfig":"15"},{"size":821,"mtime":1630473421756,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"14oto9t",{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"30"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"30"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"30"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"30"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"30"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"/home/smcurtis/projects/findgredients/frontend/src/reportWebVitals.js",[],["61","62"],"/home/smcurtis/projects/findgredients/frontend/src/helpers/requestHandlers.js",[],"/home/smcurtis/projects/findgredients/frontend/src/components/ingredient-search/IngredientSearch.js",[],"/home/smcurtis/projects/findgredients/frontend/src/components/footer/Footer.js",[],"/home/smcurtis/projects/findgredients/frontend/src/index.tsx",[],["63","64"],"/home/smcurtis/projects/findgredients/frontend/src/App.jsx",["65","66","67","68"],"import './App.css';\nimport Footer from './components/footer/Footer'\nimport React, { useState } from 'react';\nimport Recipe from './components/pages/recipe-page/Recipe'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport HomePage from './components/pages/home-page/HomePage';\nimport SearchPage from './components/pages/search-page/SearchPage';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Link,\n  Route\n} from 'react-router-dom'\nimport { useEffect } from 'react';\n\n\nfunction App() {\n  const [searchValues, setSearchValues] = useState('')\n  const [results, setResults] = useState(JSON.parse(sessionStorage.getItem('results')))\n  const [selectedRecipe, setSelectedRecipe] = useState(sessionStorage.getItem('selectedRecipe'))\n  const [prevResults, setPrevResults] = useState(JSON.parse(sessionStorage.getItem('prevResults')))\n\n  const appendPrevResults = (results) => {\n    //append results to end of prevResults state\n\n    if (prevResults == null || prevResults.length == 0) {\n      setPrevResults([results])\n    } else {\n      setPrevResults(currentState => [...currentState, results]) }\n    }\n  \n\n  const removeLastPrevResult = () => {\n    //if no prev results, do nothing, else remove last inserted result\n    const array = prevResults\n    const currentResults = array.pop()\n    // console.log(\"this is the array:\" + array)\n    // console.log(\"This is the results=\" + JSON.stringify(currentResults))\n    setPrevResults(array)\n    return currentResults\n  }\n\n  useEffect(() => {\n  // Used for react state session storage\n    sessionStorage.setItem('results', JSON.stringify(results))\n    sessionStorage.setItem('selectedRecipe', selectedRecipe)\n    sessionStorage.setItem('prevResults', JSON.stringify(prevResults))\n  }, [results, selectedRecipe, prevResults])\n\n  return (\n    <div className=\"App\">\n      <Router>\n        <Switch>\n          <Route exact path=\"/\" >\n            <HomePage\n              searchValues={searchValues}\n              setSearchValues={setSearchValues}\n              results={results}\n              setResults={setResults} />\n          </Route>\n          <Route path=\"/search\">\n            <SearchPage\n              searchValues={searchValues}\n              setSearchValues={setSearchValues}\n              results={results}\n              setResults={setResults}\n              setSelectedRecipe={setSelectedRecipe} \n              appendPrevResults={appendPrevResults}\n              removeLastPrevResult={removeLastPrevResult} \n              setPrevResults={setPrevResults}\n              hasPrevResults={prevResults == null || prevResults.length == 0 ? false : true}/>\n          </Route>\n          <Route path=\"/recipe\">\n            { selectedRecipe ? <Recipe \n              results={results}\n              selectedRecipe = {selectedRecipe} /> : \"not loaded\" }\n          </Route>\n        </Switch>\n      </Router>\n\n    </div>\n  );\n}\n\nexport default App;\n","/home/smcurtis/projects/findgredients/frontend/src/components/grid/RecipeGrid.js",[],"/home/smcurtis/projects/findgredients/frontend/src/components/grid/RecipeTile.js",["69","70"],"import React from \"react\";\nimport { Card, Button } from \"react-bootstrap\"\nimport { useHistory } from 'react-router-dom'\nimport { isPropertySignature } from \"typescript\";\n\nfunction RecipeTile(props) {\n\n    const history = useHistory()\n\n    const handleClick = (evt) => {\n        props.setSelectedRecipe(props.id, history.push(\"/recipe\"))\n    }\n\n    return (\n        <>\n            <Card style={{ width: '18rem' }} >\n                <div onClick={handleClick}>\n                    <Card.Img variant=\"top\" src={props.image} />\n                    <Card.Body>\n                        <Card.Title>{props.title}</Card.Title>\n                        {/* <Button variant=\"primary\">Go somewhere</Button> */}\n                    </Card.Body>\n                </div>\n            </Card>\n            {/* <img src={props.image} /> */}\n        </>\n    )\n}\n\nexport default RecipeTile","/home/smcurtis/projects/findgredients/frontend/src/components/pages/recipe-page/Recipe.js",["71","72","73"],"import React, { useEffect, useState } from \"react\"\nimport Image from 'react-bootstrap/Image'\n\nfunction Recipe(props) {\n    const Data = props.results.hits[props.selectedRecipe]\n    const recipeData = Data.recipe\n    // intend on being able to change servings amount later\n    const [servings, setServings] = useState(recipeData.yield)\n\n    const displayIngredients = () => {\n        return (recipeData.ingredientLines.map((ingredient, index) => {\n            return (\n                <li key={\"ingredient\" + index}>\n                    {ingredient}\n                </li>)\n        }))\n    }\n\n    const displayNutrition = () => {\n        const caloriesPerServing = Math.round(recipeData.calories / recipeData.yield)\n        return (\n            <>\n                <li>\n                    {\"Calories per serving: \" + caloriesPerServing}\n                </li>\n                <li>\n                    {\"Servings: \" + servings}\n                </li>\n            </>\n        )\n    }\n\n    const divideByServings = () => {\n\n    }\n\n    const displayDigest = () => {\n        return (recipeData.digest.map((element) => {\n            return (\n                <li>{element.label + \" \" + element.total}\n                    {element.sub ? element.sub.map((sub) => {\n                        return (<li>{sub.label}</li>)\n                    }) : null}\n                </li>\n\n            )\n        }\n        ))\n    }\n\n    return (\n        <div>\n            {console.log(recipeData)}\n            {recipeData.label}\n            {/* show title */}\n            <Image src={recipeData.image} />\n            {/* show image */}\n            {displayIngredients()}\n            {/* show ingredient list */}\n            {displayNutrition()}\n            {/* show nutrition */}\n            {displayDigest()}\n            {/* show link to preparation source website */}\n            <a href={recipeData.url}>Preparation</a>\n        </div>\n    )\n}\n\nexport default Recipe","/home/smcurtis/projects/findgredients/frontend/src/components/pages/search-page/SearchPage.js",["74"],"import React, { useState } from \"react\"\nimport IngredientSearch from \"../../ingredient-search/IngredientSearch\"\nimport { getRecipes, getNextRecipes, clean } from '../../../helpers/requestHandlers';\nimport RecipeGrid from \"../../grid/RecipeGrid\";\nimport HealthLabelsDropdown from \"../../dropdown/HealthLabelsDropdown\";\nimport DietLabelDropdown from \"../../dropdown/DietLabelDropdown\";\n\nfunction SearchPage(props) {\n  const hasNext = props.results._links.next ? true : false\n  const [healthLabels, setHealthLabels] = useState({health: \"\"})\n  const [dietLabel, setDietLabel] = useState({diet: \"\"})\n\n\n  const handleSubmit = async () => {\n    const queryParams = {\n      ...{ q: props.searchValues }, \n      ...healthLabels, \n      ...dietLabel\n    }\n    // console.log(queryParams)\n    const result = await getRecipes(queryParams)\n    console.log(result)\n    props.setPrevResults(null)\n    props.setResults(result)\n  }\n\n  const handleNext = async () => {\n    const next = await getNextRecipes(props.results._links.next.href)\n    // console.log(next)\n    props.appendPrevResults(props.results)\n    props.setResults(next)\n    \n  }\n\n  const handlePrev = () => {\n    props.setResults(props.removeLastPrevResult())\n  }\n\n  return (\n    <>\n      <IngredientSearch\n        setSearchValues={props.setSearchValues}\n        searchValues={props.searchValues} />\n      <button onClick={handleSubmit}>Submit</button>\n      <HealthLabelsDropdown setHealthLabels={setHealthLabels}></HealthLabelsDropdown>\n      <DietLabelDropdown setDietLabel={setDietLabel}></DietLabelDropdown>\n      <RecipeGrid\n        recipeData={props.results}\n        setSelectedRecipe={props.setSelectedRecipe} />\n      {props.hasPrevResults ? <button onClick={handlePrev}>Prev</button> : null }\n      {hasNext ? <button onClick={handleNext}>Next</button> : null}\n      \n    </>\n  )\n}\n\nexport default SearchPage\n\n// {props.results.hits ? <Recipe recipeData={props.results.hits[0]} /> : \"Not Loaded\"}","/home/smcurtis/projects/findgredients/frontend/src/components/pages/home-page/HomePage.js",["75","76","77"],"import React, { useState } from \"react\";\nimport IngredientSearch from \"../../ingredient-search/IngredientSearch\";\nimport { getRecipes } from '../../../helpers/requestHandlers';\nimport {useHistory} from 'react-router-dom'\nimport RecipeGrid from \"../../grid/RecipeGrid\";\nimport Recipe from \"../../pages/recipe-page/Recipe\"\n\nfunction HomePage(props) {\n\n    const history = useHistory()\n\n    const handleClick = async () => {\n        const result = await getRecipes({ q: props.searchValues })\n        console.log(result)\n        props.setResults(result)\n        history.push(\"/search\")\n    }\n\n    return (\n        <>\n            <IngredientSearch\n                setSearchValues={props.setSearchValues}\n                searchValues={props.searchValues} />\n            <button onClick={handleClick}>Submit</button>\n        </>\n    )\n}\n\nexport default HomePage","/home/smcurtis/projects/findgredients/frontend/src/components/dropdown/HealthLabelsDropdown.js",[],"/home/smcurtis/projects/findgredients/frontend/src/components/dropdown/DietLabelDropdown.js",[],{"ruleId":"78","replacedBy":"79"},{"ruleId":"80","replacedBy":"81"},{"ruleId":"78","replacedBy":"79"},{"ruleId":"80","replacedBy":"81"},{"ruleId":"82","severity":1,"message":"83","line":2,"column":8,"nodeType":"84","messageId":"85","endLine":2,"endColumn":14},{"ruleId":"82","severity":1,"message":"86","line":11,"column":3,"nodeType":"84","messageId":"85","endLine":11,"endColumn":7},{"ruleId":"87","severity":1,"message":"88","line":26,"column":51,"nodeType":"89","messageId":"90","endLine":26,"endColumn":53},{"ruleId":"87","severity":1,"message":"88","line":71,"column":73,"nodeType":"89","messageId":"90","endLine":71,"endColumn":75},{"ruleId":"82","severity":1,"message":"91","line":2,"column":16,"nodeType":"84","messageId":"85","endLine":2,"endColumn":22},{"ruleId":"82","severity":1,"message":"92","line":4,"column":10,"nodeType":"84","messageId":"85","endLine":4,"endColumn":29},{"ruleId":"82","severity":1,"message":"93","line":1,"column":17,"nodeType":"84","messageId":"85","endLine":1,"endColumn":26},{"ruleId":"82","severity":1,"message":"94","line":8,"column":22,"nodeType":"84","messageId":"85","endLine":8,"endColumn":33},{"ruleId":"82","severity":1,"message":"95","line":33,"column":11,"nodeType":"84","messageId":"85","endLine":33,"endColumn":27},{"ruleId":"82","severity":1,"message":"96","line":3,"column":38,"nodeType":"84","messageId":"85","endLine":3,"endColumn":43},{"ruleId":"82","severity":1,"message":"97","line":1,"column":17,"nodeType":"84","messageId":"85","endLine":1,"endColumn":25},{"ruleId":"82","severity":1,"message":"98","line":5,"column":8,"nodeType":"84","messageId":"85","endLine":5,"endColumn":18},{"ruleId":"82","severity":1,"message":"99","line":6,"column":8,"nodeType":"84","messageId":"85","endLine":6,"endColumn":14},"no-native-reassign",["100"],"no-negated-in-lhs",["101"],"no-unused-vars","'Footer' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'Button' is defined but never used.","'isPropertySignature' is defined but never used.","'useEffect' is defined but never used.","'setServings' is assigned a value but never used.","'divideByServings' is assigned a value but never used.","'clean' is defined but never used.","'useState' is defined but never used.","'RecipeGrid' is defined but never used.","'Recipe' is defined but never used.","no-global-assign","no-unsafe-negation"]