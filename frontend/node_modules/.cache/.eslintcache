[{"/home/smcurtis/projects/findgredients/frontend/src/reportWebVitals.js":"1","/home/smcurtis/projects/findgredients/frontend/src/helpers/requestHandlers.js":"2","/home/smcurtis/projects/findgredients/frontend/src/components/ingredient-search/IngredientSearch.js":"3","/home/smcurtis/projects/findgredients/frontend/src/components/footer/Footer.js":"4","/home/smcurtis/projects/findgredients/frontend/src/index.tsx":"5","/home/smcurtis/projects/findgredients/frontend/src/App.jsx":"6","/home/smcurtis/projects/findgredients/frontend/src/components/grid/RecipeGrid.js":"7","/home/smcurtis/projects/findgredients/frontend/src/components/grid/RecipeTile.js":"8","/home/smcurtis/projects/findgredients/frontend/src/components/pages/recipe-page/Recipe.js":"9","/home/smcurtis/projects/findgredients/frontend/src/components/pages/search-page/SearchPage.js":"10","/home/smcurtis/projects/findgredients/frontend/src/components/pages/home-page/HomePage.js":"11","/home/smcurtis/projects/findgredients/frontend/src/components/dropdown/HealthLabelsDropdown.js":"12","/home/smcurtis/projects/findgredients/frontend/src/components/dropdown/DietLabelDropdown.js":"13","/home/smcurtis/projects/findgredients/frontend/src/components/login/LoginModal.js":"14","/home/smcurtis/projects/findgredients/frontend/src/helpers/authRequestHandlers.js":"15","/home/smcurtis/projects/findgredients/frontend/src/components/login/AuthForm.js":"16","/home/smcurtis/projects/findgredients/frontend/src/components/navigation/TopNav.js":"17","/home/smcurtis/projects/findgredients/frontend/src/components/pages/search-page/FirstSearch.js":"18","/home/smcurtis/projects/findgredients/frontend/src/components/pages/favorites-page/FavoritesPage.js":"19","/home/smcurtis/projects/findgredients/frontend/src/components/pages/favorites-page/AltFavoritesPage.js":"20","/home/smcurtis/projects/findgredients/frontend/src/components/login/LogoutModal.js":"21"},{"size":362,"mtime":1627849308199,"results":"22","hashOfConfig":"23"},{"size":1461,"mtime":1630548876997,"results":"24","hashOfConfig":"23"},{"size":443,"mtime":1627856258669,"results":"25","hashOfConfig":"23"},{"size":1490,"mtime":1633061107504,"results":"26","hashOfConfig":"23"},{"size":500,"mtime":1629172144478,"results":"27","hashOfConfig":"23"},{"size":4531,"mtime":1632032324538,"results":"28","hashOfConfig":"23"},{"size":718,"mtime":1629949115553,"results":"29","hashOfConfig":"23"},{"size":867,"mtime":1632288901661,"results":"30","hashOfConfig":"23"},{"size":2117,"mtime":1632291020521,"results":"31","hashOfConfig":"23"},{"size":1952,"mtime":1632286933571,"results":"32","hashOfConfig":"23"},{"size":452,"mtime":1632026227938,"results":"33","hashOfConfig":"23"},{"size":854,"mtime":1630462837955,"results":"34","hashOfConfig":"23"},{"size":821,"mtime":1630473421756,"results":"35","hashOfConfig":"23"},{"size":3784,"mtime":1632029633698,"results":"36","hashOfConfig":"23"},{"size":387,"mtime":1632026325388,"results":"37","hashOfConfig":"23"},{"size":1230,"mtime":1632019651888,"results":"38","hashOfConfig":"23"},{"size":1317,"mtime":1633053851254,"results":"39","hashOfConfig":"23"},{"size":864,"mtime":1632026135228,"results":"40","hashOfConfig":"23"},{"size":257,"mtime":1632030506688,"results":"41","hashOfConfig":"23"},{"size":281,"mtime":1632030505268,"results":"42","hashOfConfig":"23"},{"size":1056,"mtime":1632037193198,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"14oto9t",{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"46"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"46"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"46"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"46"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"46"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"46"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"46"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"46"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"46"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"46"},"/home/smcurtis/projects/findgredients/frontend/src/reportWebVitals.js",[],["100","101"],"/home/smcurtis/projects/findgredients/frontend/src/helpers/requestHandlers.js",[],"/home/smcurtis/projects/findgredients/frontend/src/components/ingredient-search/IngredientSearch.js",[],"/home/smcurtis/projects/findgredients/frontend/src/components/footer/Footer.js",["102","103","104"],"import React from 'react';\nimport \"./footer.css\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n// import { faCoffee } from '@fortawesome/free-solid-svg-icons'\n\nfunction Footer() {\n    return (\n        <>\n            <footer className=\"footer\">\n                <div className=\"footer-left col-md-4 col-sm-6\">\n                    <p className=\"about\">\n                        <span> About the website</span> This website was developed as a personal project using the Edamam API and React, Node, Express, and MongoDB.\n                        <span></span>\n                        <span> Â© 2021 by Scott Curtis</span>\n                    </p>\n                </div>\n                <div className=\"footer-center col-md-4 col-sm-6\">\n                </div>\n                <div className=\"footer-right col-md-4 col-sm-6\">\n                    <h2> Recip<span>!</span>ease</h2>\n                    <p className=\"menu\">\n                        <div>\n                            <a href=\"https://www.scott-curtis.com\"> Personal Website</a>\n                        </div>\n                        <div>\n                            <a href=\"\">LinkedIn</a>\n                        </div>\n                        <div>\n                            <a href=\"\">GitHub</a>\n                        </div>\n                    </p>\n                    <p className=\"name\"> Scott Curtis &copy; 2021</p>\n                </div>\n            </footer>\n        </>\n    )\n}\n\nexport default Footer\n\n","/home/smcurtis/projects/findgredients/frontend/src/index.tsx",[],["105","106"],"/home/smcurtis/projects/findgredients/frontend/src/App.jsx",["107","108","109","110"],"import './App.css';\nimport Footer from './components/footer/Footer'\nimport React, { useState } from 'react';\nimport Recipe from './components/pages/recipe-page/Recipe'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport HomePage from './components/pages/home-page/HomePage';\nimport SearchPage from './components/pages/search-page/SearchPage';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Link,\n  Route\n} from 'react-router-dom'\nimport { useEffect } from 'react';\nimport LoginModal from './components/login/LoginModal'\nimport LogoutModal from './components/login/LogoutModal'\nimport TopNav from './components/navigation/TopNav'\nimport FirstSearch from './components/pages/search-page/FirstSearch';\nimport FavoritesPage from './components/pages/favorites-page/FavoritesPage';\nimport AltFavoritesPage from './components/pages/favorites-page/AltFavoritesPage';\n\nfunction App() {\n  const [searchValues, setSearchValues] = useState('')\n  const [results, setResults] = useState(JSON.parse(sessionStorage.getItem('results')))\n  const [selectedRecipe, setSelectedRecipe] = useState(sessionStorage.getItem('selectedRecipe'))\n  const [prevResults, setPrevResults] = useState(JSON.parse(sessionStorage.getItem('prevResults')))\n  const [jsonWebToken, setJWT] = useState(\"\")\n  const [showModal, setShowModal] = useState(false)\n  const [email, setEmail] = useState(\"\")\n  const [showLogout, setShowLogout] = useState(false)\n\n  const appendPrevResults = (results) => {\n    //append results to end of prevResults state\n\n    if (prevResults == null || prevResults.length == 0) {\n      setPrevResults([results])\n    } else {\n      setPrevResults(currentState => [...currentState, results])\n    }\n  }\n\n  const removeLastPrevResult = () => {\n    //if no prev results, do nothing, else remove last inserted result\n    const array = prevResults\n    const currentResults = array.pop()\n    // console.log(\"this is the array:\" + array)\n    // console.log(\"This is the results=\" + JSON.stringify(currentResults))\n    setPrevResults(array)\n    return currentResults\n  }\n\n  useEffect(() => {\n    // Used for react state session storage\n    sessionStorage.setItem('results', JSON.stringify(results))\n    sessionStorage.setItem('selectedRecipe', selectedRecipe)\n    sessionStorage.setItem('prevResults', JSON.stringify(prevResults))\n    sessionStorage.setItem('jwt', jsonWebToken)\n  }, [results, selectedRecipe, prevResults, jsonWebToken])\n\n  return (\n    <div className=\"App\">\n      <Router>\n        <LoginModal\n          jwt={jsonWebToken}\n          setJWT={setJWT}\n          setEmail={setEmail} \n          show={showModal}\n          setShow={setShowModal}\n          isLogin={false}/>\n        <LogoutModal \n          setJWT={setJWT}\n          setEmail={setEmail} \n          setShow={setShowLogout}\n          show={showLogout}\n        />\n        <TopNav\n          setPrevResults={setPrevResults}\n          setResults={setResults}\n          setShowModal={setShowModal}\n          setShowLogout={setShowLogout}\n          jwt={jsonWebToken}\n        />\n        <Switch>\n          <Route exact path=\"/\" >\n            <HomePage\n              searchValues={searchValues}\n              setSearchValues={setSearchValues}\n              results={results}\n              setResults={setResults} />\n          </Route>\n          <Route exact path=\"/search\" >\n            <FirstSearch\n              searchValues={searchValues}\n              setSearchValues={setSearchValues}\n              results={results}\n              setResults={setResults} />\n          </Route>\n          <Route path=\"/searchlist\">\n            <SearchPage\n              searchValues={searchValues}\n              setSearchValues={setSearchValues}\n              results={results}\n              setResults={setResults}\n              setSelectedRecipe={setSelectedRecipe}\n              appendPrevResults={appendPrevResults}\n              removeLastPrevResult={removeLastPrevResult}\n              setPrevResults={setPrevResults}\n              hasPrevResults={prevResults == null || prevResults.length == 0 ? false : true} />\n          </Route>\n          <Route path=\"/recipe\">\n            {selectedRecipe ? <Recipe\n              results={results}\n              selectedRecipe={selectedRecipe} /> : \"not loaded\"}\n          </Route>\n            <Route path=\"/favorites\">\n              {jsonWebToken ? \n                <FavoritesPage /> :\n                <AltFavoritesPage />\n              }\n            </Route>\n        </Switch>\n      </Router>\n      <Footer></Footer>\n    </div>\n  );\n}\n\nexport default App;\n","/home/smcurtis/projects/findgredients/frontend/src/components/grid/RecipeGrid.js",[],"/home/smcurtis/projects/findgredients/frontend/src/components/grid/RecipeTile.js",["111","112"],"import React from \"react\";\nimport { Card, Button } from \"react-bootstrap\"\nimport { useHistory } from 'react-router-dom'\nimport { isPropertySignature } from \"typescript\";\n\nfunction RecipeTile(props) {\n\n    const history = useHistory()\n\n    const handleClick = (evt) => {\n        props.setSelectedRecipe(props.id, history.push(\"/recipe\"))\n    }\n\n    return (\n        <>\n            <Card style={{ width: '18rem' }} >\n                <div onClick={handleClick}>\n                    <Card.Img variant=\"top\" src={props.image} />\n                    <Card.Body>\n                        <Card.Title>{props.title}</Card.Title>\n                        {/* <Button variant=\"primary\">Go somewhere</Button> */}\n                    </Card.Body>\n                </div>\n            </Card>\n            {/* <img src={props.image} /> */}\n        </>\n    )\n}\n\nexport default RecipeTile","/home/smcurtis/projects/findgredients/frontend/src/components/pages/recipe-page/Recipe.js",["113","114","115"],"import React, { useEffect, useState } from \"react\"\nimport Image from 'react-bootstrap/Image'\n\nfunction Recipe(props) {\n    const Data = props.results.hits[props.selectedRecipe]\n    const recipeData = Data.recipe\n    // intend on being able to change servings amount later\n    const [servings, setServings] = useState(recipeData.yield)\n\n    const displayIngredients = () => {\n        return (recipeData.ingredientLines.map((ingredient, index) => {\n            return (\n                <li key={\"ingredient\" + index}>\n                    {ingredient}\n                </li>)\n        }))\n    }\n\n    const addFavorite = (evt) => {\n\n    }\n\n    const displayNutrition = () => {\n        const caloriesPerServing = Math.round(recipeData.calories / recipeData.yield)\n        return (\n            <>\n                <li>\n                    {\"Calories per serving: \" + caloriesPerServing}\n                </li>\n                <li>\n                    {\"Servings: \" + servings}\n                </li>\n            </>\n        )\n    }\n\n    const divideByServings = () => {\n\n    }\n\n    const displayDigest = () => {\n        return (recipeData.digest.map((element) => {\n            return (\n                <li>{element.label + \" \" + element.total}\n                    {element.sub ? element.sub.map((sub) => {\n                        return (<li>{sub.label}</li>)\n                    }) : null}\n                </li>\n\n            )\n        }\n        ))\n    }\n\n    return (\n        <div>\n            {console.log(Data)}\n            {console.log(recipeData)}\n            {recipeData.label}\n            {/* show title */}\n            <Image src={recipeData.image} />\n            {/* Show save button */}\n            <button onClick={addFavorite}>Add to Favorites</button>\n            {/* show image */}\n            {displayIngredients()}\n            {/* show ingredient list */}\n            {displayNutrition()}\n            {/* show nutrition */}\n            {displayDigest()}\n            {/* show link to preparation source website */}\n            <a href={recipeData.url}>Preparation</a>\n        </div>\n    )\n}\n\nexport default Recipe","/home/smcurtis/projects/findgredients/frontend/src/components/pages/search-page/SearchPage.js",["116"],"import React, { useState } from \"react\"\nimport IngredientSearch from \"../../ingredient-search/IngredientSearch\"\nimport { getRecipes, getNextRecipes, clean } from '../../../helpers/requestHandlers';\nimport RecipeGrid from \"../../grid/RecipeGrid\";\nimport HealthLabelsDropdown from \"../../dropdown/HealthLabelsDropdown\";\nimport DietLabelDropdown from \"../../dropdown/DietLabelDropdown\";\n\nfunction SearchPage(props) {\n  const hasNext = props.results._links.next ? true : false\n  const [healthLabels, setHealthLabels] = useState({health: \"\"})\n  const [dietLabel, setDietLabel] = useState({diet: \"\"})\n\n\n  const handleSubmit = async () => {\n    const queryParams = {\n      ...{ q: props.searchValues }, \n      ...healthLabels, \n      ...dietLabel\n    }\n    // console.log(queryParams)\n    const result = await getRecipes(queryParams)\n    console.log(result)\n    props.setPrevResults(null)\n    props.setResults(result)\n  }\n\n  const handleNext = async () => {\n    const next = await getNextRecipes(props.results._links.next.href)\n    // console.log(next)\n    props.appendPrevResults(props.results)\n    props.setResults(next)\n    \n  }\n\n  const handlePrev = () => {\n    props.setResults(props.removeLastPrevResult())\n  }\n\n  return (\n    <>\n      <IngredientSearch\n        setSearchValues={props.setSearchValues}\n        searchValues={props.searchValues} />\n      <HealthLabelsDropdown setHealthLabels={setHealthLabels}></HealthLabelsDropdown>\n      <DietLabelDropdown setDietLabel={setDietLabel}></DietLabelDropdown>\n      <button onClick={handleSubmit}>Apply Changes</button>\n      <RecipeGrid\n        recipeData={props.results}\n        setSelectedRecipe={props.setSelectedRecipe} />\n      {props.hasPrevResults ? <button onClick={handlePrev}>Prev</button> : null }\n      {hasNext ? <button onClick={handleNext}>Next</button> : null}\n    </>\n  )\n}\n\nexport default SearchPage\n\n// {props.results.hits ? <Recipe recipeData={props.results.hits[0]} /> : \"Not Loaded\"}","/home/smcurtis/projects/findgredients/frontend/src/components/pages/home-page/HomePage.js",["117","118","119","120","121","122"],"import React, { useState } from \"react\";\nimport IngredientSearch from \"../../ingredient-search/IngredientSearch\";\nimport { getRecipes } from '../../../helpers/requestHandlers';\nimport {useHistory} from 'react-router-dom'\nimport RecipeGrid from \"../../grid/RecipeGrid\";\nimport Recipe from \"../../pages/recipe-page/Recipe\"\n\nfunction HomePage(props) {\n\n    const history = useHistory()\n\n    return (\n        <>\n        </>\n    )\n}\n\nexport default HomePage","/home/smcurtis/projects/findgredients/frontend/src/components/dropdown/HealthLabelsDropdown.js",[],"/home/smcurtis/projects/findgredients/frontend/src/components/dropdown/DietLabelDropdown.js",[],"/home/smcurtis/projects/findgredients/frontend/src/components/login/LoginModal.js",["123","124","125","126"],"import React, { useState, useReducer, useEffect } from 'react'\nimport { Modal, Button, Form, Navbar } from 'react-bootstrap'\nimport { requestAuth } from '../../helpers/authRequestHandlers'\nimport AuthForm from './AuthForm'\n\nfunction LoginModal(props) {\n    // const [show, setShow] = useState(false)\n    const [email, setEmail] = useState(\"\")\n    const [password, setPassword] = useState(\"\")\n    const [isLogin, setIsLogin] = useState(props.isLogin ? props.isLogin : true)\n    const [validated, setValidated] = useState(false)\n    // const [_, forceUpdate] = useReducer((x) => x + 1, 0)\n\n    useEffect(() => {\n        setIsLogin(props)\n    }, [props.isLogin])\n\n    const handleClose = () => { \n        props.setShow(false)\n        setEmail(\"\")\n        setPassword(\"\")\n        setValidated(false)\n    }\n    \n    const handleSubmit = async (event) => {\n        event.preventDefault();\n        const form = event.currentTarget\n        if (form.checkValidity() === false) {\n            event.stopPropagation();\n        }\n        setValidated(true)\n        console.log(isLogin)\n        console.log(isLogin ? \"login\" : \"signup\")\n        const authResponse = await requestAuth(\n            isLogin ? \"login\" : \"signup\", \n            {\n                'email': email,\n                'password': password,\n            }\n        )\n        console.log(authResponse)\n        if (isLogin === true && authResponse.token){\n            props.setJWT(authResponse.token)\n            props.setEmail(email)\n            props.setShow(false)\n        }\n    }\n\n    const handleTitle = () => {\n        if (isLogin) {\n            return \"Login\"\n        }\n        return \"Sign-up\"\n    }\n\n    const handleFormSwitch = (event) => {\n        setIsLogin((currVal) => !currVal)\n    }\n\n    const handleDemoUser = async (event) => {\n        event.preventDefault()\n        const authResponse = await requestAuth(\n            isLogin ? \"login\" : \"signup\", \n            {\n                'email': \"demo@demo\",\n                'password': \"user\",\n            }\n        )\n        props.setJWT(authResponse.token)\n        props.setEmail(\"Demo User\")\n        props.setShow(false)\n    }\n\n    return (\n        <Modal\n            show={props.show}\n            onHide={handleClose}\n            backdrop=\"static\"\n            keyboard={true}\n            centered\n        >\n            <Modal.Header closeButton>\n                <Modal.Title>{handleTitle()}</Modal.Title>\n            </Modal.Header>\n            <Form noValidate validated={validated}>\n                <Modal.Body>\n                    <AuthForm\n                        setEmail={setEmail}\n                        setPassword={setPassword}\n                    />\n                </Modal.Body>\n                <Modal.Footer>\n                    <Button variant=\"outline-primary\" style={{ \"margin-right\": \"auto\" }} onClick={handleDemoUser} >\n                        Demo User\n                    </Button>\n                    <div>\n                        {isLogin ?\n                            <Navbar.Text>\n                                Don't have an account?\n                                <a href=\"#\" style={{ \"text-decoration\": \"none\" }} onClick={handleFormSwitch}> Sign-up</a>\n                            </Navbar.Text> :\n                            <Navbar.Text>\n                                Already have an account?\n                                <a href=\"#\" style={{ \"text-decoration\": \"none\" }} onClick={handleFormSwitch}> Login</a>\n                            </Navbar.Text>}\n                    </div>\n                    <Button type=\"submit\" variant=\"primary\" onClick={handleSubmit}>\n                        Submit\n                    </Button>\n                </Modal.Footer>\n            </Form>\n        </Modal>\n    )\n}\n\nexport default LoginModal","/home/smcurtis/projects/findgredients/frontend/src/helpers/authRequestHandlers.js",[],"/home/smcurtis/projects/findgredients/frontend/src/components/login/AuthForm.js",[],"/home/smcurtis/projects/findgredients/frontend/src/components/navigation/TopNav.js",["127"],"import React from 'react'\nimport { Navbar, Container, Nav } from 'react-bootstrap'\nimport {\n    BrowserRouter as Router,\n    Link,\n  } from 'react-router-dom'\n\n\nfunction TopNav(props) {\n\n    const handleProfile = (event) => {\n        props.setShowModal(true)\n    }\n\n    const handleLogout = () => {\n        props.setShowLogout(true)\n    }\n\n    const showLoginStatus = () => {\n        if (props.jwt) { \n            return true } \n        return false\n    }\n\n    return (\n        <>\n            <Navbar bg=\"dark\" variant=\"dark\">\n                <Container>\n                    <Link to=\"/\"><Navbar.Brand>Recip!ease</Navbar.Brand></Link>\n                    <Nav className=\"me-auto\">\n                        <Nav.Link><Link to=\"/\">Home</Link></Nav.Link>\n                        <Nav.Link><Link to=\"/search\">Search</Link></Nav.Link>\n                        <Nav.Link><Link to=\"/favorites\">Favorites</Link></Nav.Link>\n                        {showLoginStatus() ? \n                            <Nav.Link><Link onClick={handleLogout}>Logout</Link></Nav.Link> : \n                            <Nav.Link><Link onClick={handleProfile}>Login</Link></Nav.Link>\n                        }\n                        \n                    </Nav>\n                </Container>\n            </Navbar>\n        </>\n    )\n}\n\nexport default TopNav","/home/smcurtis/projects/findgredients/frontend/src/components/pages/search-page/FirstSearch.js",["128","129","130"],"import React, { useState } from \"react\";\nimport IngredientSearch from \"../../ingredient-search/IngredientSearch\";\nimport { getRecipes } from '../../../helpers/requestHandlers';\nimport {useHistory} from 'react-router-dom'\nimport RecipeGrid from \"../../grid/RecipeGrid\";\nimport Recipe from \"../../pages/recipe-page/Recipe\"\n\nfunction FirstSearch(props) {\n\n    const history = useHistory()\n\n    const handleClick = async () => {\n        const result = await getRecipes({ q: props.searchValues })\n        console.log(result)\n        props.setResults(result)\n        history.push(\"/searchlist\")\n    }\n\n    return (\n        <>\n            <IngredientSearch\n                setSearchValues={props.setSearchValues}\n                searchValues={props.searchValues} />\n            <button onClick={handleClick}>Submit</button>\n        </>\n    )\n}\n\nexport default FirstSearch","/home/smcurtis/projects/findgredients/frontend/src/components/pages/favorites-page/FavoritesPage.js",["131","132"],"import React, { useState } from \"react\";\nimport {useHistory} from 'react-router-dom'\n\nfunction FavoritesPage(props) {\n\n    const history = useHistory()\n\n    return (\n        <>\n            {\"Favorites Page\"}\n        </>\n    )\n}\n\nexport default FavoritesPage","/home/smcurtis/projects/findgredients/frontend/src/components/pages/favorites-page/AltFavoritesPage.js",["133","134"],"import React, { useState } from \"react\";\nimport {useHistory} from 'react-router-dom'\n\nfunction AltFavoritesPage(props) {\n\n    const history = useHistory()\n\n    return (\n        <>\n            {\"Please login to use this feature\"}\n        </>\n    )\n}\n\nexport default AltFavoritesPage","/home/smcurtis/projects/findgredients/frontend/src/components/login/LogoutModal.js",["135","136"],"import React from \"react\";\nimport { Modal, Button, Form, Navbar } from 'react-bootstrap'\n\nfunction LogoutModal(props) {\n    const handleSignout = () => {\n        props.setJWT(\"\")\n        props.setEmail(\"\") \n        props.setShow(false)\n    }\n    \n    const handleClose = () => {\n        props.setShow(false)\n    }\n\n    return (\n        <Modal\n            show={props.show}\n            onHide={handleClose}\n            backdrop=\"static\"\n            keyboard={true}\n            centered\n            size=\"sm\"\n        >\n            <Modal.Header style={{\"border-bottom\": \"none\"}}>\n                <Modal.Title>Are you sure you want to logout?</Modal.Title>\n            </Modal.Header>\n            <Modal.Footer style={{\"border-top\": \"none\"}}>\n                <Button variant=\"primary\" onClick={handleSignout} >\n                    Yes\n                </Button>\n                <Button variant=\"secondary\" onClick={handleClose}>\n                    No\n                </Button>\n            </Modal.Footer>\n        </Modal>\n    )\n}\n\nexport default LogoutModal\n\n",{"ruleId":"137","replacedBy":"138"},{"ruleId":"139","replacedBy":"140"},{"ruleId":"141","severity":1,"message":"142","line":3,"column":10,"nodeType":"143","messageId":"144","endLine":3,"endColumn":25},{"ruleId":"145","severity":1,"message":"146","line":26,"column":29,"nodeType":"147","endLine":26,"endColumn":40},{"ruleId":"145","severity":1,"message":"146","line":29,"column":29,"nodeType":"147","endLine":29,"endColumn":40},{"ruleId":"137","replacedBy":"138"},{"ruleId":"139","replacedBy":"140"},{"ruleId":"141","severity":1,"message":"148","line":11,"column":3,"nodeType":"143","messageId":"144","endLine":11,"endColumn":7},{"ruleId":"141","severity":1,"message":"149","line":29,"column":10,"nodeType":"143","messageId":"144","endLine":29,"endColumn":15},{"ruleId":"150","severity":1,"message":"151","line":35,"column":51,"nodeType":"152","messageId":"153","endLine":35,"endColumn":53},{"ruleId":"150","severity":1,"message":"151","line":108,"column":73,"nodeType":"152","messageId":"153","endLine":108,"endColumn":75},{"ruleId":"141","severity":1,"message":"154","line":2,"column":16,"nodeType":"143","messageId":"144","endLine":2,"endColumn":22},{"ruleId":"141","severity":1,"message":"155","line":4,"column":10,"nodeType":"143","messageId":"144","endLine":4,"endColumn":29},{"ruleId":"141","severity":1,"message":"156","line":1,"column":17,"nodeType":"143","messageId":"144","endLine":1,"endColumn":26},{"ruleId":"141","severity":1,"message":"157","line":8,"column":22,"nodeType":"143","messageId":"144","endLine":8,"endColumn":33},{"ruleId":"141","severity":1,"message":"158","line":37,"column":11,"nodeType":"143","messageId":"144","endLine":37,"endColumn":27},{"ruleId":"141","severity":1,"message":"159","line":3,"column":38,"nodeType":"143","messageId":"144","endLine":3,"endColumn":43},{"ruleId":"141","severity":1,"message":"160","line":1,"column":17,"nodeType":"143","messageId":"144","endLine":1,"endColumn":25},{"ruleId":"141","severity":1,"message":"161","line":2,"column":8,"nodeType":"143","messageId":"144","endLine":2,"endColumn":24},{"ruleId":"141","severity":1,"message":"162","line":3,"column":10,"nodeType":"143","messageId":"144","endLine":3,"endColumn":20},{"ruleId":"141","severity":1,"message":"163","line":5,"column":8,"nodeType":"143","messageId":"144","endLine":5,"endColumn":18},{"ruleId":"141","severity":1,"message":"164","line":6,"column":8,"nodeType":"143","messageId":"144","endLine":6,"endColumn":14},{"ruleId":"141","severity":1,"message":"165","line":10,"column":11,"nodeType":"143","messageId":"144","endLine":10,"endColumn":18},{"ruleId":"141","severity":1,"message":"166","line":1,"column":27,"nodeType":"143","messageId":"144","endLine":1,"endColumn":37},{"ruleId":"167","severity":1,"message":"168","line":16,"column":8,"nodeType":"169","endLine":16,"endColumn":23,"suggestions":"170"},{"ruleId":"145","severity":1,"message":"146","line":100,"column":33,"nodeType":"147","endLine":100,"endColumn":110},{"ruleId":"145","severity":1,"message":"146","line":104,"column":33,"nodeType":"147","endLine":104,"endColumn":110},{"ruleId":"141","severity":1,"message":"171","line":4,"column":22,"nodeType":"143","messageId":"144","endLine":4,"endColumn":28},{"ruleId":"141","severity":1,"message":"160","line":1,"column":17,"nodeType":"143","messageId":"144","endLine":1,"endColumn":25},{"ruleId":"141","severity":1,"message":"163","line":5,"column":8,"nodeType":"143","messageId":"144","endLine":5,"endColumn":18},{"ruleId":"141","severity":1,"message":"164","line":6,"column":8,"nodeType":"143","messageId":"144","endLine":6,"endColumn":14},{"ruleId":"141","severity":1,"message":"160","line":1,"column":17,"nodeType":"143","messageId":"144","endLine":1,"endColumn":25},{"ruleId":"141","severity":1,"message":"165","line":6,"column":11,"nodeType":"143","messageId":"144","endLine":6,"endColumn":18},{"ruleId":"141","severity":1,"message":"160","line":1,"column":17,"nodeType":"143","messageId":"144","endLine":1,"endColumn":25},{"ruleId":"141","severity":1,"message":"165","line":6,"column":11,"nodeType":"143","messageId":"144","endLine":6,"endColumn":18},{"ruleId":"141","severity":1,"message":"172","line":2,"column":25,"nodeType":"143","messageId":"144","endLine":2,"endColumn":29},{"ruleId":"141","severity":1,"message":"173","line":2,"column":31,"nodeType":"143","messageId":"144","endLine":2,"endColumn":37},"no-native-reassign",["174"],"no-negated-in-lhs",["175"],"no-unused-vars","'FontAwesomeIcon' is defined but never used.","Identifier","unusedVar","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'Link' is defined but never used.","'email' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'Button' is defined but never used.","'isPropertySignature' is defined but never used.","'useEffect' is defined but never used.","'setServings' is assigned a value but never used.","'divideByServings' is assigned a value but never used.","'clean' is defined but never used.","'useState' is defined but never used.","'IngredientSearch' is defined but never used.","'getRecipes' is defined but never used.","'RecipeGrid' is defined but never used.","'Recipe' is defined but never used.","'history' is assigned a value but never used.","'useReducer' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. If 'setIsLogin' needs the current value of 'props', you can also switch to useReducer instead of useState and read 'props' in the reducer.","ArrayExpression",["176"],"'Router' is defined but never used.","'Form' is defined but never used.","'Navbar' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"177","fix":"178"},"Update the dependencies array to be: [props, props.isLogin]",{"range":"179","text":"180"},[643,658],"[props, props.isLogin]"]